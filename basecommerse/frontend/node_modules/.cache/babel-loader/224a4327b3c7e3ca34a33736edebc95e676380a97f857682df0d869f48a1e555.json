{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nimport * as React from 'react';\nimport isEqual from 'react-fast-compare';\n/**\n * Create an AuthProvider component to wrap a React app with, it will take care of common AuthClient\n * lifecycle handling (such as initialization and token refresh).\n *\n * @param AuthContext the Auth context to be used by the created AuthProvider\n *\n * @returns the AuthProvider component\n */\nexport function createAuthProvider(AuthContext) {\n  var defaultInitOptions = {\n    onLoad: 'check-sso'\n  };\n  var initialState = {\n    initialized: false,\n    isAuthenticated: false,\n    isLoading: true\n  };\n  return (/** @class */function (_super) {\n      __extends(KeycloakProvider, _super);\n      function KeycloakProvider() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.state = __assign({}, initialState);\n        _this.onError = function (event) {\n          return function (error) {\n            var onEvent = _this.props.onEvent;\n            // Notify Events listener\n            onEvent && onEvent(event, error);\n          };\n        };\n        _this.updateState = function (event) {\n          return function () {\n            var _a = _this.props,\n              authClient = _a.authClient,\n              onEvent = _a.onEvent,\n              onTokens = _a.onTokens,\n              isLoadingCheck = _a.isLoadingCheck;\n            var _b = _this.state,\n              prevInitialized = _b.initialized,\n              prevAuthenticated = _b.isAuthenticated,\n              prevLoading = _b.isLoading;\n            // Notify Events listener\n            onEvent && onEvent(event);\n            // Check Loading state\n            var isLoading = isLoadingCheck ? isLoadingCheck(authClient) : false;\n            // Check if user is authenticated\n            var isAuthenticated = isUserAuthenticated(authClient);\n            // Avoid double-refresh if state hasn't changed\n            if (!prevInitialized || isAuthenticated !== prevAuthenticated || isLoading !== prevLoading) {\n              _this.setState({\n                initialized: true,\n                isAuthenticated: isAuthenticated,\n                isLoading: isLoading\n              });\n            }\n            // Notify token listener, if any\n            var idToken = authClient.idToken,\n              refreshToken = authClient.refreshToken,\n              token = authClient.token;\n            onTokens && onTokens({\n              idToken: idToken,\n              refreshToken: refreshToken,\n              token: token\n            });\n          };\n        };\n        _this.refreshToken = function (event) {\n          return function () {\n            var _a = _this.props,\n              autoRefreshToken = _a.autoRefreshToken,\n              authClient = _a.authClient,\n              onEvent = _a.onEvent;\n            // Notify Events listener\n            onEvent && onEvent(event);\n            if (autoRefreshToken !== false) {\n              // Refresh Keycloak token\n              authClient.updateToken(5);\n            }\n          };\n        };\n        return _this;\n      }\n      KeycloakProvider.prototype.componentDidMount = function () {\n        this.init();\n      };\n      KeycloakProvider.prototype.componentDidUpdate = function (_a) {\n        var prevAuthClient = _a.authClient,\n          prevInitOptions = _a.initOptions;\n        var _b = this.props,\n          initOptions = _b.initOptions,\n          authClient = _b.authClient;\n        if (authClient !== prevAuthClient || !isEqual(initOptions, prevInitOptions)) {\n          // De-init previous AuthClient instance\n          prevAuthClient.onReady = undefined;\n          prevAuthClient.onAuthSuccess = undefined;\n          prevAuthClient.onAuthError = undefined;\n          prevAuthClient.onAuthRefreshSuccess = undefined;\n          prevAuthClient.onAuthRefreshError = undefined;\n          prevAuthClient.onAuthLogout = undefined;\n          prevAuthClient.onTokenExpired = undefined;\n          // Reset state\n          this.setState(__assign({}, initialState));\n          // Init new AuthClient instance\n          this.init();\n        }\n      };\n      KeycloakProvider.prototype.init = function () {\n        var _a = this.props,\n          initOptions = _a.initOptions,\n          authClient = _a.authClient;\n        // Attach Keycloak listeners\n        authClient.onReady = this.updateState('onReady');\n        authClient.onAuthSuccess = this.updateState('onAuthSuccess');\n        authClient.onAuthError = this.onError('onAuthError');\n        authClient.onAuthRefreshSuccess = this.updateState('onAuthRefreshSuccess');\n        authClient.onAuthRefreshError = this.onError('onAuthRefreshError');\n        authClient.onAuthLogout = this.updateState('onAuthLogout');\n        authClient.onTokenExpired = this.refreshToken('onTokenExpired');\n        authClient.init(__assign(__assign({}, defaultInitOptions), initOptions)).catch(this.onError('onInitError'));\n      };\n      KeycloakProvider.prototype.render = function () {\n        var _a = this.props,\n          children = _a.children,\n          authClient = _a.authClient,\n          LoadingComponent = _a.LoadingComponent;\n        var _b = this.state,\n          initialized = _b.initialized,\n          isLoading = _b.isLoading;\n        if (!!LoadingComponent && (!initialized || isLoading)) {\n          return LoadingComponent;\n        }\n        return React.createElement(AuthContext.Provider, {\n          value: {\n            initialized: initialized,\n            authClient: authClient\n          }\n        }, children);\n      };\n      return KeycloakProvider;\n    }(React.PureComponent)\n  );\n}\nfunction isUserAuthenticated(authClient) {\n  return !!authClient.idToken && !!authClient.token;\n}\nexport default createAuthProvider;","map":{"version":3,"mappings":"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","names":["React","isEqual","createAuthProvider","AuthContext","defaultInitOptions","onLoad","initialState","initialized","isAuthenticated","isLoading","__extends","_this","event","error","props","onEvent","authClient","onTokens","isLoadingCheck","state","prevInitialized","prevAuthenticated","prevLoading","isUserAuthenticated","setState","refreshToken","token","idToken","autoRefreshToken","updateToken","KeycloakProvider","init","_a","prevAuthClient","prevInitOptions","initOptions","onReady","undefined","onAuthSuccess","onAuthError","onAuthRefreshSuccess","onAuthRefreshError","onAuthLogout","onTokenExpired","updateState","onError","catch","children","LoadingComponent","Provider","value","PureComponent"],"sources":["@react-keycloak/core/provider.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"module","externalDependencies":[]}